# Copyright (c) 2018 Aleksey Strelnikov
#
# This software is provided 'as-is', without any express or implied
# warranty. In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "glfw",
    hdrs = ["glfw.hpp"],
    deps = [
        ":log",
        "@glfw//:glfw",
    ],
)

cc_library(
    name = "log",
    hdrs = ["log.hpp"],
    srcs = ["log.cpp"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_test(
    name = "log_test",
    srcs = ["log_test.cpp"],
    deps = [
        ":log",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "function",
    hdrs = ["function.hpp"],
)

cc_test(
    name = "function_test",
    srcs = ["function_test.cpp"],
    deps = [
        ":function",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "function_queue",
    hdrs = ["function_queue.hpp"],
    srcs = ["function_queue.cpp"],
    deps = [
        ":function",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
    ],
)

cc_test(
    name = "function_queue_test",
    srcs = ["function_queue_test.cpp"],
    deps = [
        ":function_queue",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "watch",
    hdrs = ["watch.hpp"],
    deps = ["@com_google_absl//absl/time"],
)

cc_test(
    name = "watch_test",
    srcs = ["watch_test.cpp"],
    deps = [
        ":watch",
        "@com_google_absl//absl/time",
        "@com_google_googletest//:gtest_main",
    ],
)
